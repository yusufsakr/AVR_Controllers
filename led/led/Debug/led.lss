
led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002c4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000318  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 000000c8  00000000  00000000  00000348  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000006a4  00000000  00000000  00000410  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000002c5  00000000  00000000  00000ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000379  00000000  00000000  00000d79  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  0000013c  00000000  00000000  000010f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000028e  00000000  00000000  00001230  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000d7f  00000000  00000000  000014be  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000098  00000000  00000000  0000223d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
   8:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
   c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  10:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  14:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  18:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  1c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  20:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  24:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  28:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  2c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  30:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  34:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  38:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  3c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  40:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  44:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  48:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  4c:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  50:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__bad_interrupt>
  54:	8a 00       	.word	0x008a	; ????
  56:	a7 00       	.word	0x00a7	; ????
  58:	c4 00       	.word	0x00c4	; ????
  5a:	e1 00       	.word	0x00e1	; ????
  5c:	fd 00       	.word	0x00fd	; ????
  5e:	fd 00       	.word	0x00fd	; ????
  60:	fd 00       	.word	0x00fd	; ????
  62:	fd 00       	.word	0x00fd	; ????
  64:	fd 00       	.word	0x00fd	; ????
  66:	fd 00       	.word	0x00fd	; ????
  68:	fd 00       	.word	0x00fd	; ????
  6a:	fd 00       	.word	0x00fd	; ????
  6c:	fd 00       	.word	0x00fd	; ????
  6e:	fd 00       	.word	0x00fd	; ????
  70:	fd 00       	.word	0x00fd	; ????
  72:	fd 00       	.word	0x00fd	; ????
  74:	fd 00       	.word	0x00fd	; ????
  76:	fd 00       	.word	0x00fd	; ????
  78:	fd 00       	.word	0x00fd	; ????
  7a:	fd 00       	.word	0x00fd	; ????
  7c:	fd 00       	.word	0x00fd	; ????
  7e:	fd 00       	.word	0x00fd	; ????
  80:	fd 00       	.word	0x00fd	; ????
  82:	fd 00       	.word	0x00fd	; ????
  84:	fd 00       	.word	0x00fd	; ????
  86:	fd 00       	.word	0x00fd	; ????
  88:	fd 00       	.word	0x00fd	; ????
  8a:	fd 00       	.word	0x00fd	; ????
  8c:	fd 00       	.word	0x00fd	; ????
  8e:	fd 00       	.word	0x00fd	; ????
  90:	fd 00       	.word	0x00fd	; ????
  92:	fd 00       	.word	0x00fd	; ????
  94:	8a 00       	.word	0x008a	; ????
  96:	a7 00       	.word	0x00a7	; ????
  98:	c4 00       	.word	0x00c4	; ????
  9a:	e1 00       	.word	0x00e1	; ????
  9c:	09 01       	movw	r0, r18
  9e:	16 01       	movw	r2, r12
  a0:	23 01       	movw	r4, r6
  a2:	30 01       	movw	r6, r0
  a4:	3c 01       	movw	r6, r24
  a6:	3c 01       	movw	r6, r24
  a8:	3c 01       	movw	r6, r24
  aa:	3c 01       	movw	r6, r24
  ac:	3c 01       	movw	r6, r24
  ae:	3c 01       	movw	r6, r24
  b0:	3c 01       	movw	r6, r24
  b2:	3c 01       	movw	r6, r24
  b4:	3c 01       	movw	r6, r24
  b6:	3c 01       	movw	r6, r24
  b8:	3c 01       	movw	r6, r24
  ba:	3c 01       	movw	r6, r24
  bc:	3c 01       	movw	r6, r24
  be:	3c 01       	movw	r6, r24
  c0:	3c 01       	movw	r6, r24
  c2:	3c 01       	movw	r6, r24
  c4:	3c 01       	movw	r6, r24
  c6:	3c 01       	movw	r6, r24
  c8:	3c 01       	movw	r6, r24
  ca:	3c 01       	movw	r6, r24
  cc:	3c 01       	movw	r6, r24
  ce:	3c 01       	movw	r6, r24
  d0:	3c 01       	movw	r6, r24
  d2:	3c 01       	movw	r6, r24
  d4:	3c 01       	movw	r6, r24
  d6:	3c 01       	movw	r6, r24
  d8:	3c 01       	movw	r6, r24
  da:	3c 01       	movw	r6, r24
  dc:	09 01       	movw	r0, r18
  de:	16 01       	movw	r2, r12
  e0:	23 01       	movw	r4, r6
  e2:	30 01       	movw	r6, r0

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf e5       	ldi	r28, 0x5F	; 95
  ea:	d8 e0       	ldi	r29, 0x08	; 8
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	0e 94 44 01 	call	0x288	; 0x288 <main>
  f4:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <_exit>

000000f8 <__bad_interrupt>:
  f8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fc <DIO_set_pin_dir>:
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	fc 01       	movw	r30, r24
 100:	e1 54       	subi	r30, 0x41	; 65
 102:	f1 09       	sbc	r31, r1
 104:	e4 32       	cpi	r30, 0x24	; 36
 106:	f1 05       	cpc	r31, r1
 108:	08 f0       	brcs	.+2      	; 0x10c <DIO_set_pin_dir+0x10>
 10a:	77 c0       	rjmp	.+238    	; 0x1fa <DIO_set_pin_dir+0xfe>
 10c:	e6 5d       	subi	r30, 0xD6	; 214
 10e:	ff 4f       	sbci	r31, 0xFF	; 255
 110:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__tablejump2__>
 114:	41 30       	cpi	r20, 0x01	; 1
 116:	69 f4       	brne	.+26     	; 0x132 <DIO_set_pin_dir+0x36>
 118:	2a b3       	in	r18, 0x1a	; 26
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	ac 01       	movw	r20, r24
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_set_pin_dir+0x2a>
 122:	44 0f       	add	r20, r20
 124:	55 1f       	adc	r21, r21
 126:	6a 95       	dec	r22
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_set_pin_dir+0x26>
 12a:	ba 01       	movw	r22, r20
 12c:	62 2b       	or	r22, r18
 12e:	6a bb       	out	0x1a, r22	; 26
 130:	08 95       	ret
 132:	2a b3       	in	r18, 0x1a	; 26
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	ac 01       	movw	r20, r24
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_set_pin_dir+0x44>
 13c:	44 0f       	add	r20, r20
 13e:	55 1f       	adc	r21, r21
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_set_pin_dir+0x40>
 144:	ba 01       	movw	r22, r20
 146:	60 95       	com	r22
 148:	62 23       	and	r22, r18
 14a:	6a bb       	out	0x1a, r22	; 26
 14c:	08 95       	ret
 14e:	41 30       	cpi	r20, 0x01	; 1
 150:	69 f4       	brne	.+26     	; 0x16c <DIO_set_pin_dir+0x70>
 152:	27 b3       	in	r18, 0x17	; 23
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	ac 01       	movw	r20, r24
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_set_pin_dir+0x64>
 15c:	44 0f       	add	r20, r20
 15e:	55 1f       	adc	r21, r21
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_set_pin_dir+0x60>
 164:	ba 01       	movw	r22, r20
 166:	62 2b       	or	r22, r18
 168:	67 bb       	out	0x17, r22	; 23
 16a:	08 95       	ret
 16c:	27 b3       	in	r18, 0x17	; 23
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	ac 01       	movw	r20, r24
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_set_pin_dir+0x7e>
 176:	44 0f       	add	r20, r20
 178:	55 1f       	adc	r21, r21
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_set_pin_dir+0x7a>
 17e:	ba 01       	movw	r22, r20
 180:	60 95       	com	r22
 182:	62 23       	and	r22, r18
 184:	67 bb       	out	0x17, r22	; 23
 186:	08 95       	ret
 188:	41 30       	cpi	r20, 0x01	; 1
 18a:	69 f4       	brne	.+26     	; 0x1a6 <DIO_set_pin_dir+0xaa>
 18c:	24 b3       	in	r18, 0x14	; 20
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	ac 01       	movw	r20, r24
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_set_pin_dir+0x9e>
 196:	44 0f       	add	r20, r20
 198:	55 1f       	adc	r21, r21
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_set_pin_dir+0x9a>
 19e:	ba 01       	movw	r22, r20
 1a0:	62 2b       	or	r22, r18
 1a2:	64 bb       	out	0x14, r22	; 20
 1a4:	08 95       	ret
 1a6:	24 b3       	in	r18, 0x14	; 20
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	ac 01       	movw	r20, r24
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_set_pin_dir+0xb8>
 1b0:	44 0f       	add	r20, r20
 1b2:	55 1f       	adc	r21, r21
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_set_pin_dir+0xb4>
 1b8:	ba 01       	movw	r22, r20
 1ba:	60 95       	com	r22
 1bc:	62 23       	and	r22, r18
 1be:	64 bb       	out	0x14, r22	; 20
 1c0:	08 95       	ret
 1c2:	41 30       	cpi	r20, 0x01	; 1
 1c4:	69 f4       	brne	.+26     	; 0x1e0 <DIO_set_pin_dir+0xe4>
 1c6:	21 b3       	in	r18, 0x11	; 17
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	ac 01       	movw	r20, r24
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_set_pin_dir+0xd8>
 1d0:	44 0f       	add	r20, r20
 1d2:	55 1f       	adc	r21, r21
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_set_pin_dir+0xd4>
 1d8:	ba 01       	movw	r22, r20
 1da:	62 2b       	or	r22, r18
 1dc:	61 bb       	out	0x11, r22	; 17
 1de:	08 95       	ret
 1e0:	21 b3       	in	r18, 0x11	; 17
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	ac 01       	movw	r20, r24
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_set_pin_dir+0xf2>
 1ea:	44 0f       	add	r20, r20
 1ec:	55 1f       	adc	r21, r21
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_set_pin_dir+0xee>
 1f2:	ba 01       	movw	r22, r20
 1f4:	60 95       	com	r22
 1f6:	62 23       	and	r22, r18
 1f8:	61 bb       	out	0x11, r22	; 17
 1fa:	08 95       	ret

000001fc <DIO_toogle>:
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	fc 01       	movw	r30, r24
 200:	e1 54       	subi	r30, 0x41	; 65
 202:	f1 09       	sbc	r31, r1
 204:	e4 32       	cpi	r30, 0x24	; 36
 206:	f1 05       	cpc	r31, r1
 208:	b8 f5       	brcc	.+110    	; 0x278 <DIO_toogle+0x7c>
 20a:	e2 5b       	subi	r30, 0xB2	; 178
 20c:	ff 4f       	sbci	r31, 0xFF	; 255
 20e:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__tablejump2__>
 212:	2b b3       	in	r18, 0x1b	; 27
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	ac 01       	movw	r20, r24
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_toogle+0x24>
 21c:	44 0f       	add	r20, r20
 21e:	55 1f       	adc	r21, r21
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_toogle+0x20>
 224:	ba 01       	movw	r22, r20
 226:	62 27       	eor	r22, r18
 228:	6b bb       	out	0x1b, r22	; 27
 22a:	08 95       	ret
 22c:	28 b3       	in	r18, 0x18	; 24
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	ac 01       	movw	r20, r24
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_toogle+0x3e>
 236:	44 0f       	add	r20, r20
 238:	55 1f       	adc	r21, r21
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_toogle+0x3a>
 23e:	ba 01       	movw	r22, r20
 240:	62 27       	eor	r22, r18
 242:	68 bb       	out	0x18, r22	; 24
 244:	08 95       	ret
 246:	25 b3       	in	r18, 0x15	; 21
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	ac 01       	movw	r20, r24
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_toogle+0x58>
 250:	44 0f       	add	r20, r20
 252:	55 1f       	adc	r21, r21
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_toogle+0x54>
 258:	ba 01       	movw	r22, r20
 25a:	62 27       	eor	r22, r18
 25c:	65 bb       	out	0x15, r22	; 21
 25e:	08 95       	ret
 260:	22 b3       	in	r18, 0x12	; 18
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	ac 01       	movw	r20, r24
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_toogle+0x72>
 26a:	44 0f       	add	r20, r20
 26c:	55 1f       	adc	r21, r21
 26e:	6a 95       	dec	r22
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_toogle+0x6e>
 272:	ba 01       	movw	r22, r20
 274:	62 27       	eor	r22, r18
 276:	62 bb       	out	0x12, r22	; 18
 278:	08 95       	ret

0000027a <LED_init>:
 27a:	41 e0       	ldi	r20, 0x01	; 1
 27c:	0e 94 7e 00 	call	0xfc	; 0xfc <DIO_set_pin_dir>
 280:	08 95       	ret

00000282 <LED_toggle>:
 282:	0e 94 fe 00 	call	0x1fc	; 0x1fc <DIO_toogle>
 286:	08 95       	ret

00000288 <main>:
#define led_pin 0         //Define the LED pin

int main(void)
{
	
	LED_init(led_port, led_pin);    //Initialize the LED on the M>C
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	70 e0       	ldi	r23, 0x00	; 0
 28c:	81 e4       	ldi	r24, 0x41	; 65
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 3d 01 	call	0x27a	; 0x27a <LED_init>
	
    while(1)
    {
        LED_toggle(led_port, led_pin);   //Toggle the LED status
 294:	60 e0       	ldi	r22, 0x00	; 0
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	81 e4       	ldi	r24, 0x41	; 65
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 41 01 	call	0x282	; 0x282 <LED_toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a0:	2f ef       	ldi	r18, 0xFF	; 255
 2a2:	89 e6       	ldi	r24, 0x69	; 105
 2a4:	98 e1       	ldi	r25, 0x18	; 24
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <main+0x1e>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0x28>
 2b0:	00 00       	nop
 2b2:	f0 cf       	rjmp	.-32     	; 0x294 <main+0xc>

000002b4 <__tablejump2__>:
 2b4:	ee 0f       	add	r30, r30
 2b6:	ff 1f       	adc	r31, r31

000002b8 <__tablejump__>:
 2b8:	05 90       	lpm	r0, Z+
 2ba:	f4 91       	lpm	r31, Z
 2bc:	e0 2d       	mov	r30, r0
 2be:	09 94       	ijmp

000002c0 <_exit>:
 2c0:	f8 94       	cli

000002c2 <__stop_program>:
 2c2:	ff cf       	rjmp	.-2      	; 0x2c2 <__stop_program>
